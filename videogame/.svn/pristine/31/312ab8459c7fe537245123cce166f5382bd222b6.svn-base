
class BetArea extends eui.Component implements  eui.UIComponent {
	public betText:eui.Label;
	public topImg:eui.Image;
	public bottomImg:eui.Image;
	public roleImg:eui.Image;
	private winText:eui.Label;
	private oddsText:eui.Label;
	private totalText:eui.Label;
	
	public isWin:boolean = false;
	private _odds : number = 1;
	public get odds() : number {
		return this._odds;
	}
	public set odds(v : number) {
		this._odds = v;
		
	}
	
	private _type : number = 0;
	public get type() : number {
		return this._type;
	}
	public set type(v : number) {
		this._type = v;
		if(v == AreaType.Dragon )this._odds = 2;
		else if(v == AreaType.Tiger )this._odds = 2;
		else if(v == AreaType.Tie)this._odds = 8;
	}
	
	private _bet:number =0;
	public get bet(){
		return this._bet;
	}
	public set bet (value:number){
		this._bet = value;
	}

	private _winCoin : number = 0;
	public get winCoin() : number {
		return this._winCoin;
	}
	public set winCoin(v : number) {
		this._winCoin = v;
	}
	
	public reset():void{
		if(this.winText){
			this.winText.visible = false;
			this.betText.visible = false;
			this.totalText.visible = false;
		}
		this._bet = 0;
		this._winCoin = 0;
	}

	public addBet(value:number):void{
		//egret.log("bet : " + value);
		this._bet = this._bet*1.0 +  value*1.0;
		//egret.log("this.bet : " + this._bet);
		this.betText.visible = true;
		//this.betText.text = this._bet.toString();
	}

	public updateCoin(param:any):void{
	
		if(param.selfBet >0){
			this.betText.visible = true;
			this._bet = Number(param.selfBet);
			this.betText.text = this._bet.toString();
			//egret.log("selfBet: " + param.selfBet + " totalBet: " + param.totalBet);
		}
		if(param.totalBet>0){
			this.totalText.visible = true;
			this.totalText.text = param.totalBet.toString();
		}
	}
	
	public constructor() {
		super();
	}

	protected partAdded(partName:string,instance:any):void
	{
		super.partAdded(partName,instance);
		this.addEventListener( eui.UIEvent.COMPLETE, this.uiCompHandler, this );
	}


	protected childrenCreated():void
	{
		super.childrenCreated();
	}

	private uiCompHandler():void {
		let topRes:string = "";
		let bottomRes:string = "";
		let roleRes:string = "";
		let roleName:string ="";
		if(this.type == AreaType.Dragon){
			topRes = "catdog_ui_json.board_1";
			bottomRes ="catdog_ui_json.cat_bg";
			roleRes = "catdog_ui_json.cat";
			roleName = "猫 ";
		}else if(this.type  == AreaType.Tie){
			topRes = "catdog_ui_json.board_2";
			bottomRes ="catdog_ui_json.tie_bg";
			roleRes = "catdog_ui_json.tie";
			roleName = "和 ";
		}else if(this.type  == AreaType.Tiger){
			topRes = "catdog_ui_json.board_3";
			bottomRes ="catdog_ui_json.dog_bg";
			roleRes = "catdog_ui_json.dog";
			roleName = "狗 ";
		}
		this.oddsText.text =  "1:" + this.odds;
		this.roleImg.source = RES.getRes(roleRes);
		this.topImg.source = RES.getRes(topRes);
		this.bottomImg.source = RES.getRes(bottomRes);
		this.reset();
		this.touchChildren = false;
		
		this.roleImg.anchorOffsetX = this.roleImg.width*0.5;
		this.roleImg.anchorOffsetY = this.roleImg.height*0.5;
	}

	public settle(winType:number):void{
		if(this._bet ==0)return;
		this.winText.visible = true;
		this.isWin = (winType == this.type);
		if(this.isWin){
			this._winCoin = this._bet * this._odds;
			this.winText.text = "+" + this._winCoin;
		}else{
			this._winCoin = 0;
			this.winText.text = "-" + this._bet;
		}
	}

	public getChipPos():egret.Point{
		return this.localToGlobal(this.width*0.5, this.height*0.2);
	}
}